### run

echo running
soap -a {{ fq_forward_input }} 						\
	-b {{ fq_reverse_input }} 						\
	-D {{ db_index_files }} 						\
	-o {{ soap_output }} 							\
	-M {{ match_mode }} 							\
	{% if out_read_id %} -t {% endif %} 			\
	-l {{ long_read_seed_len }} 					\
	-n {{ rm_low_qual_reads }} 						\
	-r {{ how_report_hits }} 						\
	-m {{ min_insert_size }} 						\
	-x {{ max_insert_size }}						\
	-v {{ mismatches_per_read }} 					\
	-g {{ gap_size }}								\
	-u {{ out_unmapped_reads_file }} 				\
	-2 {{ out_file_unpaired_aln }} 					\
	-e {{ edge_bp_no_gaps }}						\
	{% if type_of_pe %} -R {% endif %} 				\
	{% if report_read_mismatches %} -A {% endif %}  \
	-p {{ thread_num }}

echo fasta_to_fai
samtools faidx {{ fa_input }}
echo soap_to_bam
/opt/samtools/soap2sam.pl {{ soap_output }} | samtools view -bt {{fa_input}}.fai - > {{ bam_output }}


### clean

rm *.bam 
rm *.soap 
rm *.txt

### unittest

mkdir 10.index
cd 10.index
moa new soapdb -t 'soap index unittest'
moa set input_fasta="${MOABASE}/share/test/test.fasta"
moa run

cd ../

mkdir 20.aln_pe
cd 20.aln_pe
moa new soap_aln_pe -t 'soap aln unittest'
moa set db_index_files=${MOABASE}/share/test/test.fasta.index
moa set fq_forward_input=${MOABASE}/share/test/*_1.fq
moa set fa_input=${MOABASE}/share/test/test.fasta
moa run

